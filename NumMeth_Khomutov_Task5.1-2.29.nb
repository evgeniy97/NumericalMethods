(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     98868,       2000]
NotebookOptionsPosition[     97213,       1943]
NotebookOutlinePosition[     97589,       1959]
CellTagsIndexPosition[     97546,       1956]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvc+LLVt2HhjdPelhg6ae9Lsg/QUFjQcCU4NUz4SaLoEfSLhwtbmYpxZl
CdGzwhORIISEeCPhcVIDT1TUHyDlyJMaeGQKLhQYqiYuS9QTFpJ/REe+dXPd
73zrR+w4eU7GOSe/xcfl3MiIvddee+21vth7R8T//u3/9zf+n/95mqZ/9b8u
//zGP/uDf/Ld7/6z/+//+t+W//zfv/Ov3v+L3/nOP/8/f+f3vvMvvvPd/+Pb
/8ty8Hf+p2n6J8uPp9/z+eXx8XHK5P37937O/f09KvPw8GD/Xc65u7uL59D5
JlagXbucQKe9e/fODrpWy5nLj7uvxY/7tajJhw8f0qbRta7tSF1UsteLTcZ2
UZOxqOXH8qelltiEpfzlv0tdqcUa8fLtcju4tMt7zRtlGi5/mp/72hrlVcfC
UcNG+UqsOc0JfSFLjWQfrx1lUwOpsb3buKA9rYP6S1wNVJL0X8qhc1BMMRx6
c3Bjaw4akJwnVRXHnbfONSH7RG9Muww9nHSOHUeOFCsdPKeSxuuohEXVkd6X
SCSSKxKLlmkYtJDuf/LfS8j1LGDhF8+nQjzIIx3y0yzFePRe/mQx9oUUzsvE
ZDpSV0XhyEoPX0tsMlE4zNpkyZQBpkIJ19QmxdzIxF3tWmy4/R6hcJXyqSyF
NxRlpBCkYe+/lvS0TQ18OYVbfo90EGkbSV3fdqRVJmYN09y5x9J2VD6yvuUI
lmMXEn9DC+BIjHqm5vJKUcOq4XYONZwqHTmnEvQ6Yo9xYNIwqRxMIpFIrkUs
srnQX53C2V89zOIMngVbyx1+0MO+H7TSluN+vp9mmcLEMoJftfywyOx1uVZ4
JDbKxM7Bu/umrkaslqgJtQXVrprgB+PlVR/h5Z6w0OzUiVGwmX4hmo6a1tvf
Bd0gTlFOYXqHmmAlY8b33km7NZqxbyD27P3X4v9N5/dMYuFN12APIplExfAc
slI83+oizd3OvT2j/lgdDQcyJt7XRAuQLCejy+GtBDYEzzFNaOZ/8ByyWOV1
SOEqtdEaonASieS2Zesy3yXIZ9/+iXA+7NizlqNHDkokEolE8sblGincnG0i
egtCG6Vcbma24eYbKJFIJBLJqUQUTiKRSCQSieS6ZHCn1qXJ7kuNt429u1ci
kUgkkquWSRAEQRAEQTgPROEEQRAEQRCuDqJwgiAIgiAIVwdROEEQBEEQhKuD
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
zTOXQF8p8lroKw9U6Zx9aD4lJPStzP4zWP7dojm844K+UhTP2Vpg2k1T9kgm
fkltBvaIBll9EwV9B806jqiX87T4Fa2RrkSFp+zB52hD+iYUffUMz8kIp0Qi
kUgkR8tK3twRFYWjz6rGc4hBUTmWnS3JWgmRXVAKtk/EYt4n2hOJDREMPGfT
e4mJ5uFngFLGhegJW9WWTQVG88ZzIs2OFHcx16pNbBbO/5vyIv+GVFVa05V4
jpk9Emz63uhcULjeGQASiUQikRwto1zi9bFK4SITwDyLa45x2g0/Bxmn9cYp
XJWdibfgJTivtQqicMYQ8BOi2Hwy18sp3GqB0bx0zlKaTZz2M6UjFK7pYqzd
OyW9cITC2WdGadIP691E4axpeA54oEQikUgkR8uGvPnKWKVwNp+WXmuSloOz
cJ5zvcyUwi1pGrM25v2peIup5Xr/k19i00TjRtg0C0eavJzCrRYYzUvzjWbY
2JUmuCo6SOH8M/HxT4tZrGqjVen7n5uuJJ2rOd5NFM4+I0LnACQSiUQiOVo2
0IlXxiqFQ54Wr00pXLXKVj104FfRxjbL+8TTYq5HCmey9a31SOGMYtF/UU5C
4foCU0kp3GIcvzztSnq+YNMsXNqPSy3ecbT7brUr0eDO0MwrYrd6vXHrHVI4
L0oUTiKRSCRnkG2M4jXxklk4onCrVME3PqWzcM164jiFs0u2sjjilnHN9zJn
4ZC/VV2Jc2VbF1LnsIxuG9j8r+ljBX1XxiabQWg2D5/tXU6uZuGQCorCSSQS
ieQMsi1vvibOtBeuIgOWYbdSuK174arluUa3ivJd8l440jl2AdnhCApHG+ro
jR8VXe9blL6FpqfcKYVb/m0WWwESiUQikRwt2/Lma2KVwhnliOtltBG9p3C0
bypSONo9RXnfLq9WZtMnUpudWhGbKJybKFY6cuSIAqN5TVa7kp73HKFwdAJt
C4xuEB9q6LtynhPN04caov9ECtecA5BIJBKJ5GgZIhK7IN3ORO+FiwwKM3vF
HyhB418jjSEd4pvBYtamh17n8P6xav4wYiuFW6rGRd6XU7i+wGje6hw0owlS
mpH3wiFPo22By49ozPgyk74rlzPTJ036ibiRl4rovXASiUQiOYOss4jXR/pK
f9yDFEmaS3wFB5VDf6ItWy7GFXuhRI/X+vHqQQkvvCJy9HBB3LJVib137oQS
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
35z9yIJf/OH0X/7tzr6xBslJ5LzdhLtNEM1k1CXghIkYW7p7vBVWIQonbIXN
vr5+vZdA4U7b9qZFtNX2tE04k3H++l9Of/P7H3//529Pf/2701d/Nv30H539
yN/9xdPv//ofztWuE0FyEtm9Hy8R50jENmu9e9OEHqJwwiYsPb4Xj9qdwp28
7U2L3r9PHgy/cPy3n00/+5Xp559PX335GszNjvz9v3s6srC43Zu/BslJZPd+
vDgMbjEaB+4rEC4Z6U6VcZzcc4RLhu0aGnnS9ny176XAqdq++1rnWbE08B/+
/fSfvvVK66d+5Bd/uI9PboTkJLJ7PwqCIAhngkQiuWHZPcIIgiAIZ4JEIrlh
2T3CCIIgCGeCRCK5Ydk9wgiCIAhngkQiuWHZPcIIwluEP/ugBx+Ec0Iikdys
rL5oGl/mTH+ib9gZmo8y4Euw8WkmusSLonc+2yvm4nPl8cNtdCHpcKZQid+0
2v1hf+GsqN52eASm8N5+4SoQvx6SBrELgEQiuWEpv8NrqJgPfqEGYd/98Wvx
c13p9/gM6Xfn6YjRv/TCVPn4gq+zvgQg/ciIcJNY/bb1IAY//i5cLOKnnOeL
e4O3RCK5Yfn47d0p+xDtwoIilfIwZRyJ/oSzE9Phd2/HKVz8kLRXGquLnz/G
QtKDesWucDTw2+IvRP/NXOHykVK4C4NEIrlh+fjVAKNqNJfl3/wl4mSsb/6a
pDW3nFO2z2eEwlVzZfY1dqpifs6qdHL1mn2bi2te3Np/NTt+Zbv5jnD8avYi
X35Znp9+ER4/MB0b4narPlK/nNZ8+Dt+mJ5U+t73DopdLaryBFR19VPpfsT8
B5tDtkLN6VpUwBfrv//9A8ugnbHGCstfTRmrneairV1WQvyEPek5P8/m9ZPD
2PbKmaPEz8T7OHXjo7N5j+MYrC6cDh3MaIybFFXyKqKTo81Tz9mqp52Wjrh0
XPc2nOdkpKdKNhQOSyYFcOx44al63iLUATefrL2DWiKR3LB8pHAWrzCWWr5O
KZx/6yQlfpi4j6BwdsLI7MRyPqb4OEE3ZVkvnTzslcSipkNeYeeQlexP+FE/
3x1ns5HV+dQ6itKWH10NZBGYFl1tI2+xCTaD6mrj71SlxhppUbFn7Vq70Mqk
3sHdg9MhKcUPk5EZcSFyOU5UytviLDE6W+qBjVfYbkzqLNs8sFS6aXXVyrG7
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
1UMHwBRTjRryz3fv1jOUD654iR+kUNyr3djHu9Vmpbx8HCm0+NtQOBxZTTKK
Xod3oIPhKxbbR1SkcJXDV0iHFd4HzYfMMA2VsTcjsVzKpGIfYG9tWn48f9o4
CxeHcKV/nIWjg02PvH/PZVoO8pAY21INEIqufrfSUzj/00hR5NvEo1Z7Fgcg
0cKoJA7qftSkNozuOg1QuLlmF+lUQxXfABck94cr/ia+SyoO+Wp3AYrZZ3qe
8TYhP3EhEkLFxvNpr5T/ifzfD5r4nJsJTQ+i2jMkU2oRnuwle3p1STceVFkG
tfJ7JZN32cPRj498JHZKY2cveZ4TzWloxFn3eDJu4Xj//GQ3+s/4xBSavZpU
QeP4MCfN/aCLdXdlWHwtAwlFmKjP4+HucatiZLUiKom2wqHnqg6aEX2PZmUb
w86HC8FxCJjEgUCOjf6Jsx9+Mp5g6qWXePnz83QZWgxbUa1f06CgVkzBK0ir
2OTYcR8+sEOi3fDCOHA2ha8vvsgb8v59p08TSchv4/iaIOWh8qb/3fP6rAk6
fN+bLn5JDHFV+eQ5MbhhLY+PB+f7VU3MMTGbxOFJHogvFXl4SJwTj2BdZlVU
Hs9MBwgquZojthaFoI6mM9OepR6kOTcXnPIiVZtRE21YDXBPPalNKArhzgoX
CoxVfHvGRclKOjga08Ad30uQLpIKp8LgVNINwMb76sGTG+Q/TtN///nH3//j
F9PPf/vpyN/+m/LIgl/84fRf/u2LWtoMSbwrT1eN+6XkvVCtog526144Sfia
xu4XTo64uei6yhcqs6e8busW3zeAi5JzNVMU7noxsph+M6iIDVpgfDl4HH/9
L6e/+f2Pv//zt6e//t3pqz+bfvqPyiN/9xdPv//rfzi+RlwlicCkSWv0qU0u
BFWuH+nWHXGS8FV10yvYXBTu9pAOjWrL3NvGRcm5mikKd72wpZbd1bgcDO4o
24T/9rPpZ78y/fzz6asvO+ZmR/7+3z0dWVjc0dX14/F+ywPpl4MrVXu+8vAl
Cie8bVyUnL6B6Ur0aVHtphNeAt+TcKVp8eTwzRJnSrX/8O+n//StlfVTP/KL
Pzy9Ar6/5ax3W1KbcNXhi7b/XV35gvBiXJTsbg1BEIQTQiKRSN6I7B5vBUEQ
TgiJRCJ5I7J7vBUEQTghJBKJ5I3I7vFWEAThhJBIJJI3IrvHW0EQToAf/Wj6
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
9/Dw5lIwLWU6zpFeLxknoXC4Y19w4E5LxC1RuO9//9OC7Pz1AxH0NMRypiic
RCKRnEE+xr3mqT3htnESCifsjkuYhVu86LPPpr/6q4OqNQsnkUgk5xDfeDPy
1gLh9kC70XbXRzgae1G4GfbC+cMIC4uzvXDLv+N74U4EiUQieSOyf+oRBOHl
2JHCRdg736bhJ1JPColEInkjsn/qEQRBOB0kEonkjcju8VYQBOGEkEgkkjci
u8dbQRCEE0IikUjeiOwebwVBEE4IiUQieSOye7wVBEE4ISQSieSNyO7xVhAE
QRAE4ZYgCicIgiAIgnB1EIUTBEEQBEG4OojCCYIgCIIgXB1E4S4L9jGy3dW4
Ujw8nOXb7sIV4fFxurvbXw1BEISIJUmhvDhYvR6Fe/fuo86rSdY+ie7i55+0
4ZeIpVEmu2vymrDuXtyDjvundeOfUiznn88raNxFWWonv43ejmLfisWvx07P
HxFe/lTJokal0lIUmc6r9qHnB13V5UdVnZ1JtZiG7qjT1yMxPce7z86hlrpU
nYvnpxEj7REzgv1pd8e+ZJh54weL3Rlu71vGixe5sy0OeZMZZBU23nHsrKZj
cxUcWfrW+dE4wyTDK1G4ZexYv5s/YCaqYMGEvMVcCLPVjcFavbsarwlP1pU1
Rijc4hjnjslGe8h1MS8Ylv/6ILWm4ZhNz4/FLhdiDl3OwdZF0muG8kKWk5eK
qF60sHMqjMw4rJYCXYG04dFRKe/HbrVy6Jyq1wYDHbXaI8ZycJD5v0E4uyae
tvzXjbb8uDEWR3dYu+uzoxF8cNnAX+1ovGUbyd1ChTMsEr0ShUMmtvjDSHBI
yQxG6ZvEG6Rwq9YYycWv4BXpHSgStvk5QiIXovv95XyMgXZ5bOByjhdCZVIQ
xqKoHJoA9EG3FE6twNxtWKpzPY2MUXU0iukc42ZEA+wcqjqNaTZXsNojVCkR
0cE482YRczdaTzOZN4k4skYm4oSTYBlcZ5h9eiUKhxi8O45kxuYWKAv4IpF5
ZrPgFdd3vJx0lQfPpEptisPrxcutj5B7RJViP/o5xlGtUTay4nqi/9XF5kxc
vve9T78tX/tvPI4lfP75QUtx6Q0NQjafiiAfxeOG39DZEbw1jpcPUrjltDiZ
462zP3kfRcY1ja3LR66FE1nYj2QKmpRzR7KpafPqWFc1ECqDxF2UbnPSMxIb
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
xMhUiXA0qjViQTgVrnQIn3BopLN8FwyJRHIO2X1oH4P74gtEIxTu2kLf9UEU
TjgrrncIn3BoXBuJlUgk55Ddh/aJsUrh0uUe4YQQhRPOiusdwqcaGvbY+O7N
2QKJRHIO2X1onxJxd4rDt3ZsegWEsBXN3kJBeAmufQifZGiYXNsU3LR3mpNI
blV2H9qCIAiCIAhnwg3L7rYVBEEQBEE4E25YdretIAiCIAjCmXDDsrttBUEQ
BEEQzoQblt1tKwhvFP70zeq3NQVBEIRjcbNinzOOr3C/fMQ31acPeVUPqI6g
+RTF9T4WJyDwiyTx61ENbOCcRIdp7Kt2Nwz8TEATgvAjLyesOv28mvBmgV88
MVm9RF508bhZMZZi7uek6Co8kMJ+mk9Jjsu59rFCLPMq7CMMIn5maARLoD7J
22WXQq73LWcnQbwX6885rbnOV7JwpaCPw444hrzo4nGzQpMJ/kG9vQ2+Avu2
Y3/O0i78/PTRg4s+8n40FRRuBvE79UcDv3T5NrE0f5AM23txlSKFs4LGo73N
b3ethJfhhuWgpUbhMEjiV5L9YPzGMWa0eD+C357Ga/2ErSu5VGB6Dq6I2fnH
vQ+zoXCpHeyvNEmY5h28nEy3+k1wa138vLu30d8javZMp1id3C5X0cfcqZDp
cIXRj3u7TBNflMfvp6fttSqiAVc/xU5uab1P39fGyz//vCyq/6p743tWHS6/
umJWtbUu9o4Lji+biJsyJ2na9f3vf7pwyvgkjpEJuq8aa40vxY6j8+kE/O9S
BZ4Z16ldRm7KmtN6n+l9j2xLgze2kc5vFt+b4bDqxmiZWF01wK2B2Pvf+96K
5lRUg8ql/UKXNNh6ozCixtDUmMXFHL56l3vag7/6q6wb1pLCqk5nOVYjj02P
RLELUfPevHO2pSedRvDLVycZokTjU0xz5VEHl9WERSqRqmkXf/nlp98pJ0k1
LO6sb1iS8eURaXr29kiBaMxaR5inYRb202xMUbSxiqxec2zrndW78ij9FibT
/+iFVNRnCvEH5/rst1Vnv3GbBKmEhCTdSoFlmpXcmMY6cKSY69q1ywnYI/7b
zEs6eHXp13+qTwLRzakpgyPRSaY1k5T0a/E4/qZ60YzTIX2K19LlTVHUO6tO
Ynze8zKWad882rS6auVYV1YfhqvahTqYP8SOQ0taLzdjzd3JIzPWaEWZ2G9P
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
//r1+H1+npdb+fFlC/QsaHdmVmPb1xlcw9lEDwSDg0zjGBzweQmPByaX6Hat
g/PzyTiSVsHtIXyFoadwHKWhZ1PlyGCZOKF8N8ZxRHIRD10mjQA9hUsXbmKx
LuC4hlitLDfEKAb3Mfz1VSP2ozl3ydWiGonXsFnsgAkJW5LrEh/EGsb5jhsR
Kg+fMgrnep/bR5cKKBys6mxV+R5nh6ZA4VCpmNdyo1iMAKjgdgrXNHq1NOlC
VvTJp5ftW9EnD8rCpb0y9voq41plclLTYasVN1Ma5aa2m0cH4KfE6mBpBkVh
LsBViAupuMY0xBrolhlWnDfhI49ZXOWNJbuW6jPblS+51r+7W4SL6CHbKRx3
cByP5bZknhP1FG4KPSidsG/sp2lRS9kXiyWS7fzNkmyMdIX04eH5sp/8ZPz2
t4d5Wi+mdpPTBtzcFv2Lp0u8lhp/VCS2mjUxlgVTmJtxEtuNPtDH1YKrwD3L
5cObij+Eb0ZzJIkluJJj4n28/EpArHKsPvPAqACnXAzOvFi/GNmSGZeTqo3b
3ejWaBIbompft92LVf306bUE9jSUEPcmWRM06jWVrfyBhyfXWRpABywUOiAZ
grq7domaOA0HDZSphwPOH7av4XLJcMLGSqPd5uQsM4ofFUlv5OkMznBR/AsY
7sYjPDz6edXusVMYO8W/uDpmLuiTPrT3sRimvvrK59MM99t+VORnP0ueMl4m
6cDT2o+KVLG3GkTGcpUBcE7OVAFPHNsSZRw0eILA5YyxqNfT06uquLh5VuwL
XFPud9GXYgmOEgNYdeWPfYdF08d9FKxb2i4RvASGKmx3NudIsaggO1O4i5Z0
oU1ym7Jlme82pZrvTEWS+QYFG6hWT1ayJefQS5URglyEh7vsohNeRX1DGXrJ
yF/k6dJeoBBTvhcoonDHy4kxU3JNchED3C7y+NjNhR8eTqVwP/rmd5KbksYZ
egp3poj9tnP5fx7jf797Pv6/78d3f/3DmX//u5POzPL9L8ef//4s1WfjXxaV
FYW7WQq35btpkpsSUbhK3BdRoygLd7qcnoVblYvw8IbC3d9/dOVN/vg3499+
8Xz8r9+MP/58/Olvx7/81Uln/uMffjj+79+cUe2x+cchP46Iwt0shZNIWPqd
WhLJWYW3A51pXnkRHu42izrNP6zaTv7n9+P3Px7ffT3+9OVU5mZn/vMffzgz
s7jdq/ahpN/2fDkiCieRSC5Ydl/Xk7yz7O5y55b/+qfxh5++wfopznz/y/0r
JTmPiMJJJBKJRCKRnFWuD7ubVCKRSCQSieTccn3Y3aQSiUQikUgk55brw+4m
lUgkEolEIjm3XB92N6lEIpFIJBLJueX6sLtJJRKJRCKRPIt7W9lBLy6XtHJ9
2N2kkncS/hHF/hfUJalUr9FkXMQvl0oktyb8Bvl3+BHmU2Tmbx9ZvQuX68Pu
JpW8n7zDD5Bevcw2jO8ymEOuZsoSyYcVfj/7B5+96lUp55Trw+4mlUguSSoK
p4mzRCI5UWaqqUz+OeXawO9D4ZWgNF2Dk/MBH/MC05cvixesxDdo2HKemwpF
WE6DL0Yhbp+AAaMq4IZU1NTOcyF9/iRVGGKvFY4XzE8B8AI4Pun+ywaPFeFH
uFfY9BZGNKhKc6+8iYBhucWdSe1BXGb/uEYBPMXORwcYSx/jtus1rLKO7hGr
yclVCme1m5sV+qQVRNOk/swwD7G64CmAlYOasv5oiNQNookAmAW3uD7izJUW
woat+G16Iz8utmllsRgBXChzkco0j52Xe2KvfOrJBmuyys/jI8ayX7PzuGs4
hjgHrtrIeQgj9i+YkdNWqQX4v1zTNMpFD4SjWqVQAneuGEW5NVlDrt2hATOV
Ck0EqzynqWB0v9lQ80nWuQpW0aTxlsaA7jzr7CwGNJb89On5wJzQhT6uJkbD
dHCPwTatXerMdru7Jbju9WGxLYqP08QCn+Rj3mfl3sXstmBxcOby4dgo1sqx
Y/cy3PkAHWeMxTE7Nm9+sPKtTLt+yzujG4XjBeOle/K+i7Hss/Nx3I3mqswx
wUVU07axMEZeHK+WxvHEznCBdosNf9ytosO4MqvHgeHgmAdfVsBCWTTR/NCq
7Zx/ohVMz3i9KYDQ4RorlZ7CcVxCzGRnYJqN585XshGYvnJYYx+281Yv7lxx
BOTaxd6RPjfyBPREezr7cKU8Zls9K3bbMrkFK6+rLFZZpopU8zGHCGMFPEaD
oDb6sysyT2v8nMvkWNGYgjuyu4XNxW3k7LCljfi48cO0L8AO1j2dnhb3oufA
03hmbc+toqgbmMZpAbORgyJY5TlNBaP7mWXmu7iyYxnP+TitOI63GNB1N1xT
BfbVoQcBHI9mtVHNZnB3wpNNnqTAzdxoNYjLZT33+rBoLLNA2lP61m8onMVe
UH2cZ/Iz1RSOw0hP4VyB8CjucVOgcz2FaxR2wqVZz03NOF+QUrjYAaejIhKP
etMyAnBp1tBV3Z21uQ9Oyyh0BIXjykITa1A2r1PPmXGVwkXykG5X48Fuo6xm
4VLrGT3mG8dyTE+nJC65F73LDdbcHPNJ+4j/pr2D9WHPcXQCY649hZ/Od7mP
p1C4xusqi1WWqVrHciOumbZrHl3R8efUz/ERBymFMwVWKZzRTtdGlR1W24iN
UEUblj6kxDE39RzXtdFPqyi6kcKxPs2Q1MihEazynKqCqfu50uy5cR491bF9
UCZh1YCclziCwjlLYqbM9WW10ambwd1J6vZTS+FidUiuD4t0aPQQILa+85CR
UbgxXgNLP1xWc4QxfDNNBYWLnNP+5cYCiNvgGpt7+/je0IOxzOVC7fid0Jhp
j2lk7kcOsDBHUcfurORZnyorFe+KfYeLYtu6MivlRzGCsDulFo4ULradc9q4
qpgGCty1ZRfKoRQOjRKT/6ljsH1iOnQKIwiXwIERS/yRxsQHxY/OP1GUs/BY
dpy0cQG3aJ4+CHo2XldZrLJMFaki3Or2dgpnaMzrCuwpnA2CVUJyvGRQ0zhg
bdRkDps2SlcZnGXSFklDimvBynOcZzp/iFF0C4Vz+lRDUt+yFYXrW3aVwqGC
qfs5Cje9sKzV2A64eqUGZG9J67uFwqWW5P6FBkqdpxrcowem7pRSOJ7o3RqF
g5UGTVF5DoiJA04y9+MbMY64BjqCwrmnnIPC8cqdG2IOStHw6GnH0WJczWrG
fUoWbguFm//Oj+szkNspXNxzspqFG29H4WLbuRzOFgrX2CGVUyhcNbAiwxbt
g7GbI3BD4ZBtOx+FS5lYWggrUM0ajqNwqcUay6SRqundR2ThnMKNKaaWwtlS
mmsyHnZxCy9NOm88lMJxFg6LwnblahauCimRwqWeUzGcKoquUrioTzUk9S37
DhQuOlhKirZQOM7C3dEyVm9A3uaxncI1ljQy2aynxMoaquZIe8pUUDg8ET0l
FHh9SBorMiLkJ+NAEN2JPcf9yzk/VhWnmsINomE9hUtT0OmGHCZaPBDEFm8U
Tp3tq5fNnOlaGKvNZh8F8zliIXWE3A73UNdGGykcr8c1vTLm2FPlOWhMlMeL
aUmXE64oHLcdLuMFCJQWXdfR+0gbohxK4bCOfx8W4jk6VS4H5oPKRiWRdgON
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
Qbh+3L/83PPj4+PeugiCIAgfGv8PQMOfYA==
    "], {{0, 366}, {833, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{720.9999999999993, Automatic},
  ImageSizeRaw->{833, 366},
  PlotRange->{{0, 833}, {0, 366}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
pUrm4rVPv6zefXb4vFx7iz1U+Fus/bLeNYez2sK7czi7R1Ln7fiDhYx7VWR3
l/xqeGbXVvBq/PqlyHCe/mJlMifNFSx7yHmnqJJ4L1XLFe99Mpxp8XyVDmts
VASCuem29t/K44OOPUWVtLRYe+HvtfZr6t9vt+5omBoynPqR1PzpeTNvg4WM
G1WkvkumiLC7k24Fr8avX40Mp8XqE4nTCBMDX15sK/k5IxQuV7Gcwd56RFi3
DGcKs/F9Vtdi+UTinB/GFsuLbQWFuQ3PuBBl2WKxs1UKP8DaL6hP140Pj60c
Q339fAVysfDqkVQ8RXvqWYbBQsZdKlLZJfOmL/bQxuC19fVb2O2Ng3XXaay6
AH0YNxoNFjKGqchnkuEA7DJuNBosZAxTkc8kwwHYZdxoNFjIGKYin0mGA7DL
uNFosJAxTEU+kwwHYJdxo9FgIWOYinwmGQ7ALuNGo8FCxjAV+UwyHIBdxo1G
g4WMYSrymWQ4ALuMG40GCxnDVOQzyXAAdhk3Gg0WMoapyGeS4bSL71etv2o5
LRMfK7r6VOTnilE3rzT9eP3x2vFFfh1eFBuf1LpVsOUzOfs8IfyXHyoLxMIX
D4PNrX341tz92Viqwx+UfWoXvam3t8ay+y3lwWc5QLV8/RCDhYz7VmQ1EiV5
B98a+uLwUl/y4nZ742DddXq2LvGFrekp1qtJztypcsIQ34lQBOuT3jCeXx+Q
+mfl1TMnvWhgVcrucmFW3809LZro1FeUJnkvruy88Y3t6e+5VPHV7ce+MD03
19bLxeI77tMyByY5u2v/TO9tiq23BWX5GOq5rx9osJBx04rMw2kecoujxXmk
yv+MAav4evxnh/cNnUSG0yhmC0XILv4/DiN5sWJsOSl8x6Sl8mLxk/KrLSlQ
5rJ9+6FYpmiNs19RGtVfzlW8WTsOCF+LdwMdUp75N+OYs5oQFn0v5lod1v6Z
3jgGpo1SSVHSyFOZHZXhPO2mFYmxIO7URfCa/7I6+i0nq+/4UqpJhvPCjyyH
i3i8nxTx8dgy1FWidj630qfTpn0qJga7X+mZg9UznCLEx2mNOJUXj5heVKyx
SDlWrSaN3db+Id41Bqb5umL+sDBvta3N1PL1Yw0WMgaoyDw4xE2fxv/095Zj
7Z7Hm4eT4Txh7hJbeW8xt7N6cN0hfFdS7j9+mP48S9snkYhndVuW73CKKtvN
cOIWLOajcq54VHozhXm/JF2eVP/KXIyjmuuJtX+Id7VD6pyVFCX1yXhlXdz3
d79+uMFCxt0rsnrwlbtKS5e47ymqSYbzlCIljmJ6PC1OgCanhu94vW5Lcn5s
dK7Il71d7ZChnuGk9sxNlGqRP82Z24GJ4qM5xlyGN679c7ylHeb2T/tLJUVJ
fTLn4XEIavn64QYLGfetSOVmhJwPt6Qu9z1FNclwHjd3m3qv+PpZkT/0Cd+p
A7esaK5Lh2mcefhN7dByPUDnQ4Z6hjP9fA9dDCVzjdLfU2sf1YyP5hjHnkWS
4Wzp3w5xqKlnOLEP5Jnkxq8fbrCQcfeK5EvQc5aSx/y0d9cH27nP3Po8tQzn
IfEell2r99d0u8Kk8e6eDuUpLmbbvSy25ymqqSHDyYoryePfi7NXryiuhNm6
2SGZPzr28OqhtX+UDmNgyv/zrGCRWhcJdlZsozwx2/j1ww0WMgaoSLxANHWP
mO3UK3jrU1STDOdB7dMvKeQtI3W38J1nGOriXfAnKXKtrav3k/5XtbVnOHGi
ZvW+uUO2bPvdTJWzpR3W/mneOwbuXoeTY1YRwna/frjBQsYAFUldIv29uB1m
tbdEtz5FNclwXvhi/ch6dTzpGb5bBrTGLOhFaZ/KgbJyG/v0jkOGlgxn9TxU
fFRgPW171Fd4Is3WzxYXEP72Q7e1f6DLZjjTz9fDr96/KcN52gAVKYbcOJVX
v1ny7qeoJhlOm9UnEqc+kz5KgSAvttUrTg3fxVMoi/XmAsd7Lrrdkb16zVts
uqz/owizPP6n6f144dDWYU6+l+rYTCAXLP5sasPUteLpjMMLsLp2LpXhLK+g
qD/MXIbztJtWZHVkW35aTNgWA92BD8F4FxkOwC7jRqPBQsYwFflMMhyAXcaN
RoOFjGEq8plkOAC7jBuNBgsZw1TkM8lwAHYZNxoNFjKGqchnkuEA7DJuNBos
ZAxTkc8kwwHYZdxoNFjIGKYin0mGA7DLuNFosJAxTEU+kwwHYJdxo9FgIWOY
inwmGc4T0itjKp9uPTAtvinmvEf/pbW0PDcvl6fDQ/aKJxuvWn0O1dniRqk8
Eq2y4dob/CH5GW6VX24s/Elrrz9lbjAdxsBK/2/ZHPF3cmdYfVrp8UX/ee3T
QCHjXhVZ3SUf6gOro1l8ZGvPlwa+TobzqPqLpONb8IrXAfR5ZUPuh/WRMPf5
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
rfbG/w+5uXOj
    "], {{0, 352}, {758, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{471.99999999999795`, Automatic},
  ImageSizeRaw->{758, 352},
  PlotRange->{{0, 758}, {0, 352}}]}], "Text",
 CellChangeTimes->{3.726321735671285*^9, 3.726321773357114*^9, 
  3.726321803500004*^9}],

Cell["\:041e\:043f\:0440\:0435\:0434\:0435\:043b\:0438\:043c \:0438\:0441\
\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\:043d\:044b\:0435 \
\:0437\:0430\:0434\:0430\:0447\:0438", "Item",
 CellChangeTimes->{{3.726321807507926*^9, 3.7263218276623697`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "=", 
   RowBox[{"(", GridBox[{
      {"5.94", "0.8", "0.6", 
       RowBox[{"-", "3.96"}], "0.2", "0.3"},
      {"2.97", "6.4", "0", 
       RowBox[{"-", "2.97"}], "0.2", "0.2"},
      {"2.97", "3.5", "8.7", "1.98", "0.2", "0"},
      {"4.95", "1.6", "1.2", 
       RowBox[{"-", "8.91"}], "0.8", "0.3"},
      {
       RowBox[{"-", "0.99"}], "2.5", "1.1", 
       RowBox[{"-", "3.96"}], "9", "0.4"},
      {"5.94", "1.4", "2.4", "0", "3.2", "13"}
     }], ")"}]}], ";", " ", 
  RowBox[{"b", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"22.08"},
      {"29.99"},
      {"38.7"},
      {"37.19"},
      {"36.74"},
      {"67.34"}
     }], ")"}]}], ";", " ", 
  RowBox[{"\[Epsilon]", " ", "=", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7263218574624834`*^9, 3.7263221051146455`*^9}, {
  3.7263224930856256`*^9, 3.7263225089624834`*^9}}],

Cell["\:041d\:0430\:0439\:0434\:0435\:043c \:0440\:0435\:0448\:0435\:043d\
\:0438\:0435 \:0441 \:043f\:043e\:043c\:043e\:0449\:044c\:044e \:0432\:0441\
\:0442\:0440\:043e\:0435\:043d\:043d\:044b\:0445 \:0444\:0443\:043d\:043a\
\:0446\:0438\:0435\:0439 ", "Item",
 CellChangeTimes->{{3.7263221495867214`*^9, 3.7263221781832776`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ExactX", " ", "=", " ", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "ExactX"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.2929292929292928`"},
     {"2.9`"},
     {"3.300000000000001`"},
     {
      RowBox[{"-", "2.2121212121212115`"}]},
     {"1.8999999999999997`"},
     {"3.200000000000001`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7266473246549377`*^9, 3.7266501364856944`*^9, 
  3.726652444375844*^9, 3.726652555342515*^9, 3.7266527251604605`*^9, 
  3.726652906220146*^9, 3.7266531463226743`*^9, 3.726654220887353*^9, 
  3.7266543942171364`*^9, 3.726654672953853*^9}]
}, Open  ]],

Cell["\:041e\:043f\:0440\:0435\:0434\:0435\:043b\:0438\:043c \:043c\:0435\
\:0442\:043e\:0434 \:0413\:0430\:0443\:0441\:0441\:0430", "Item",
 CellChangeTimes->{{3.7263222305540514`*^9, 3.726322244643796*^9}, {
  3.726322426865399*^9, 3.726322428362064*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GaussMethod", "[", 
    RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "M", "]"}], " ", "\[NotEqual]", " ", 
          RowBox[{"Length", "[", "m", "]"}]}], ",", 
         RowBox[{
          RowBox[{"SquareMatrixQ", "[", "M", "]"}], "\[Equal]", "False"}]}], 
        "]"}], ",", 
       RowBox[{"Return", "[", "\"\<Cannot solve\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Transpose", "@", "A"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "4", "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "]"}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", "n"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", "k"}], ";", 
        RowBox[{"max", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"k", ",", "k"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{"k", "+", "1"}]}], ",", 
          RowBox[{"i", "\[LessEqual]", "n"}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "k"}], "]"}], "]"}], "]"}], ">", "max"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"h", "=", "i"}], ",", 
              RowBox[{"max", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "k"}], "]"}], "]"}], "]"}]}]}], "}"}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"h", "\[NotEqual]", "k"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "k"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"n", "+", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"w", "=", 
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "j"}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "j"}], "]"}], "]"}], "=", 
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"h", ",", "j"}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"h", ",", "j"}], "]"}], "]"}], "=", "w"}]}], "}"}]}],
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"n", "+", "1"}]}], ",", 
          RowBox[{"j", "\[GreaterEqual]", "k"}], ",", 
          RowBox[{"j", "--"}], ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "j"}], "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "j"}], "]"}], "]"}], "/", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "k"}], "]"}], "]"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", "n"}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[NotEqual]", "k"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", 
               RowBox[{"n", "+", "1"}]}], ",", 
              RowBox[{"j", "\[GreaterEqual]", "k"}], ",", 
              RowBox[{"j", "--"}], ",", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "k"}], "]"}], "]"}], "*", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", ",", "j"}], "]"}], "]"}]}]}]}]}], "]"}]}], 
           "]"}]}], "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "a", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]",
     ")"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7263223359669867`*^9, {3.7263225918166*^9, 3.72632259519599*^9}, {
   3.726322650193097*^9, 3.72632270328498*^9}, 3.726322940616084*^9}],

Cell["\:0420\:0435\:0448\:0438\:043c \:0437\:0430\:0434\:0430\:0447\:0443 \
\:043c\:0435\:0442\:043e\:0434 \:0413\:0430\:0443\:0441\:0441\:0430", "Item",
 CellChangeTimes->{{3.7263230703646455`*^9, 3.726323087721006*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", " ", "=", " ", 
   RowBox[{"GaussMethod", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "X"}]}], "Input",
 CellChangeTimes->{{3.726322684913553*^9, 3.726322717201023*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.2929292929292933`"},
     {"2.9`"},
     {"3.3000000000000007`"},
     {
      RowBox[{"-", "2.212121212121211`"}]},
     {"1.9`"},
     {"3.200000000000001`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7263227180863523`*^9, 3.7263229456737065`*^9, 
  3.7263919990310593`*^9, 3.7263972120278864`*^9, 3.7263976636663413`*^9, 
  3.726647334132529*^9, 3.7266546794589024`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7263239711168118`*^9, 3.726323989630841*^9}, {
   3.72639209753813*^9, 3.726392200287328*^9}, 3.726392338696989*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Decomposition", "[", "A_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", GridBox[{
           {
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "0", "0", "0", "0", "0"},
           {"0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], "0", "0", "0", "0"},
           {"0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "3"}], "]"}], "]"}], "0", "0", "0"},
           {"0", "0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "4"}], "]"}], "]"}], "0", "0"},
           {"0", "0", "0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"5", ",", "5"}], "]"}], "]"}], "0"},
           {"0", "0", "0", "0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"6", ",", "6"}], "]"}], "]"}]}
          }], ")"}], ",", 
        RowBox[{"(", GridBox[{
           {"0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "3"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "4"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "5"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "6"}], "]"}], "]"}]},
           {"0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "3"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "4"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "5"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "6"}], "]"}], "]"}]},
           {"0", "0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "4"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "5"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "6"}], "]"}], "]"}]},
           {"0", "0", "0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "5"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "6"}], "]"}], "]"}]},
           {"0", "0", "0", "0", "0", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"5", ",", "6"}], "]"}], "]"}]},
           {"0", "0", "0", "0", "0", "0"}
          }], ")"}], ",", 
        RowBox[{"(", GridBox[{
           {"0", "0", "0", "0", "0", "0"},
           {
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], "0", "0", "0", "0", "0"},
           {
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}], "0", "0", "0", "0"},
           {
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "1"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "2"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "3"}], "]"}], "]"}], "0", "0", "0"},
           {
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"5", ",", "1"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"5", ",", "2"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"5", ",", "3"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"5", ",", "4"}], "]"}], "]"}], "0", "0"},
           {
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"6", ",", "1"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"6", ",", "2"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"6", ",", "3"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"6", ",", "4"}], "]"}], "]"}], 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"6", ",", "5"}], "]"}], "]"}], "0"}
          }], ")"}]}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7266481947868376`*^9, 3.726648354154826*^9}, {
  3.7266484145603933`*^9, 3.7266486321958885`*^9}, {3.726648677082246*^9, 
  3.72664868085693*^9}, {3.726649066190027*^9, 3.7266492531063166`*^9}, {
  3.7266493974866714`*^9, 3.7266493985288763`*^9}, {3.7266503872512474`*^9, 
  3.7266503885790586`*^9}, {3.7266545836904044`*^9, 3.7266545856484957`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.726650553985499*^9, 3.7266524907939386`*^9, 
  3.72665459245951*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IterationsMethodsWithGivenN", "[", 
    RowBox[{"A_", ",", "b_", ",", "x0_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x1", " ", "=", " ", "x0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2", " ", "=", " ", "x0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", " ", "=", " ", 
      RowBox[{
       RowBox[{"Length", "[", "b", "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"k", " ", "<", " ", "n"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"i", " ", "<", " ", "len"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", " ", "=", " ", "0"}], ";", 
             RowBox[{"s2", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", " ", "=", " ", "1"}], ",", 
               RowBox[{"j", " ", "<", " ", "i"}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "=", 
                   RowBox[{"s1", "+", 
                    RowBox[{
                    RowBox[{"A", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"x2", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";"}], "}"}], 
                ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", " ", "=", " ", 
                RowBox[{"i", "+", "1"}]}], ",", 
               RowBox[{"j", " ", "<", " ", "len"}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s2", "=", 
                   RowBox[{"s2", "+", 
                    RowBox[{
                    RowBox[{"A", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"x1", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";"}], "}"}], 
                ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"x2", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
              FractionBox[
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "s1", "-", 
                "s2"}], 
               RowBox[{"A", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "i"}], "]"}], "]"}]]}], ";"}], 
            "\[IndentingNewLine]", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"x1", " ", "=", " ", "x2"}], ";"}], "\[IndentingNewLine]", 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x1", "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7266521794630203`*^9, 3.726652326763215*^9}, {
  3.7266526667572346`*^9, 3.7266526745228167`*^9}, {3.726653130532978*^9, 
  3.7266531357833757`*^9}, {3.726653496948656*^9, 3.726653529125864*^9}, {
  3.726653854852401*^9, 3.7266538580603065`*^9}, {3.7266540856176047`*^9, 
  3.7266540858062363`*^9}, {3.7266541691236496`*^9, 3.726654188075838*^9}, {
  3.726654375317588*^9, 3.7266543868144073`*^9}, {3.726654489828665*^9, 
  3.7266544901979485`*^9}, {3.7266545636969957`*^9, 3.7266545673924503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X2", " ", "=", 
   RowBox[{"IterationsMethodsWithGivenN", "[", 
    RowBox[{"A", ",", "b", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "X2"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7266546012218847`*^9, 3.7266546478864346`*^9}, {
  3.726654716397005*^9, 3.726654734331897*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"1.2937137495104554`"},
      {"2.900102530556557`"},
      {"3.299443228911368`"},
      {
       RowBox[{"-", "2.2116957888434374`"}]},
      {"1.9003500926043213`"},
      {"3.1996471338005854`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7266523449854527`*^9, 3.7266524716188717`*^9, 3.7266531735222516`*^9, 
   3.726654404918518*^9, {3.726654625399843*^9, 3.7266546376941123`*^9}, 
   3.7266546884909935`*^9, {3.7266547281472063`*^9, 3.726654735516944*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X3", " ", "=", " ", 
   RowBox[{"IterationsMethodsWithGivenN", "[", 
    RowBox[{"A", ",", "b", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "X3"}]}], "Input",
 CellChangeTimes->{{3.726654740951003*^9, 3.7266547489712477`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"1.2939230920945988`"},
      {"2.9001298921876844`"},
      {"3.2992946472033813`"},
      {
       RowBox[{"-", "2.2115822590305676`"}]},
      {"1.900443519433041`"},
      {"3.1995529668016522`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.726654690626133*^9, 3.7266547498528743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]1", " ", "=", " ", 
  RowBox[{"Norm", "[", 
   RowBox[{"X", "-", "X2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7266547691055207`*^9, 3.7266547784871745`*^9}}],

Cell[BoxData["0.0011678797196011577`"], "Output",
 CellChangeTimes->{3.7266547810989757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]2", " ", "=", " ", 
  RowBox[{"Norm", "[", 
   RowBox[{"X", "-", "X3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.726654785517301*^9, 3.7266547954505424`*^9}}],

Cell[BoxData["0.0014795438252743086`"], "Output",
 CellChangeTimes->{3.726654796995776*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IterationsMethodsWithGivenEpselon", "[", 
    RowBox[{"A_", ",", "b_", ",", "x0_", ",", "epselon_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", " ", "=", " ", "x0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2", " ", "=", " ", "x0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", " ", "=", " ", 
      RowBox[{
       RowBox[{"Length", "[", "b", "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"i", " ", "<", " ", "len"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", " ", "=", " ", "0"}], ";", 
         RowBox[{"s2", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", " ", "=", " ", "1"}], ",", 
           RowBox[{"j", " ", "<", " ", "i"}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s1", "=", 
               RowBox[{"s1", "+", 
                RowBox[{
                 RowBox[{"A", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                 RowBox[{"x2", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";"}], "}"}], ";"}]}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", " ", "=", " ", 
            RowBox[{"i", "+", "1"}]}], ",", 
           RowBox[{"j", " ", "<", " ", "len"}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s2", "=", 
               RowBox[{"s2", "+", 
                RowBox[{
                 RowBox[{"A", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                 RowBox[{"x1", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";"}], "}"}], ";"}]}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "s1", "-", "s2"}], 
           RowBox[{"A", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "i"}], "]"}], "]"}]]}], ";"}], 
        "\[IndentingNewLine]", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"x1", "-", "x2"}], "]"}], ">", " ", "epselon"}], " ", ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x1", " ", "=", " ", "x2"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"i", " ", "<", " ", "len"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", " ", "=", " ", "0"}], ";", 
             RowBox[{"s2", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", " ", "=", " ", "1"}], ",", 
               RowBox[{"j", " ", "<", " ", "i"}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "=", 
                   RowBox[{"s1", "+", 
                    RowBox[{
                    RowBox[{"A", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"x2", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";"}], "}"}], 
                ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", " ", "=", " ", 
                RowBox[{"i", "+", "1"}]}], ",", 
               RowBox[{"j", " ", "<", " ", "len"}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s2", "=", 
                   RowBox[{"s2", "+", 
                    RowBox[{
                    RowBox[{"A", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"x1", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";"}], "}"}], 
                ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"x2", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
              FractionBox[
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "s1", "-", 
                "s2"}], 
               RowBox[{"A", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "i"}], "]"}], "]"}]]}], ";"}], 
            "\[IndentingNewLine]", "}"}]}], "]"}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"n", "++"}], ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "n"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7266548571000185`*^9, 3.7266549941031785`*^9}, {
  3.726655049134161*^9, 3.7266551126422095`*^9}, {3.726655181559245*^9, 
  3.7266552673222857`*^9}, {3.7266553553784933`*^9, 3.726655375878503*^9}, {
  3.7266554285175376`*^9, 3.7266554760908422`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IterationsMethodsWithGivenEpselon", "[", 
  RowBox[{"A", ",", "b", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", "\[Epsilon]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7266550045030923`*^9, 3.7266550154158115`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.292930317849463`", ",", "2.900000133959785`", ",", "3.29999927255895`",
      ",", 
     RowBox[{"-", "2.212120656290705`"}], ",", "1.9000004574083271`", ",", 
     "3.1999995389678744`"}], "}"}], ",", "19"}], "}"}]], "Output",
 CellChangeTimes->{
  3.726655017470668*^9, {3.7266550831075773`*^9, 3.7266551156740904`*^9}, {
   3.726655270768709*^9, 3.7266552731665306`*^9}, {3.726655369187622*^9, 
   3.726655379375966*^9}, 3.7266554824693575`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ExactX"], "Input",
 CellChangeTimes->{{3.7266553324851255`*^9, 3.7266553461264668`*^9}, {
  3.726655417047139*^9, 3.7266554184850616`*^9}, {3.7266554895224943`*^9, 
  3.7266554932250767`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.2929292929292928`", "}"}], ",", 
   RowBox[{"{", "2.9`", "}"}], ",", 
   RowBox[{"{", "3.300000000000001`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.2121212121212115`"}], "}"}], ",", 
   RowBox[{"{", "1.8999999999999997`", "}"}], ",", 
   RowBox[{"{", "3.200000000000001`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.72665533995405*^9, 3.7266553464858775`*^9}, 
   3.726655419031942*^9, 3.7266554936505275`*^9}]
}, Open  ]]
},
WindowSize->{1520, 791},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 65453, 1082, 873, "Text"],
Cell[66014, 1104, 265, 3, 43, "Item"],
Cell[66282, 1109, 938, 29, 166, "Input"],
Cell[67223, 1140, 332, 4, 43, "Item"],
Cell[CellGroupData[{
Cell[67580, 1148, 212, 5, 122, "Input"],
Cell[67795, 1155, 995, 26, 188, "Output"]
}, Open  ]],
Cell[68805, 1184, 257, 3, 43, "Item"],
Cell[69065, 1189, 5971, 160, 561, "Input"],
Cell[75039, 1351, 221, 2, 43, "Item"],
Cell[CellGroupData[{
Cell[75285, 1357, 268, 6, 97, "Input"],
Cell[75556, 1365, 913, 25, 188, "Output"]
}, Open  ]],
Cell[76484, 1393, 165, 2, 45, "Input"],
Cell[76652, 1397, 5444, 146, 892, "Input"],
Cell[82099, 1545, 116, 2, 45, "Input"],
Cell[82218, 1549, 3848, 87, 755, "Input"],
Cell[CellGroupData[{
Cell[86091, 1640, 477, 10, 129, "Input"],
Cell[86571, 1652, 1053, 28, 190, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87661, 1685, 408, 9, 97, "Input"],
Cell[88072, 1696, 875, 25, 190, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88984, 1726, 193, 4, 68, "Input"],
Cell[89180, 1732, 93, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89310, 1738, 191, 4, 68, "Input"],
Cell[89504, 1744, 91, 1, 44, "Output"]
}, Open  ]],
Cell[89610, 1748, 6002, 147, 1137, "Input"],
Cell[CellGroupData[{
Cell[95637, 1899, 301, 6, 45, "Input"],
Cell[95941, 1907, 525, 12, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96503, 1924, 206, 3, 45, "Input"],
Cell[96712, 1929, 485, 11, 101, "Output"]
}, Open  ]]
}
]
*)

